要创建自己的模型类，你可以扩展Backbone.Model并提供实例属性，以及可选的可以直接注册到构造函数的类属性(classProperties).
extend 可以正确的设置原型链，因此通过extend创建的子类(subclasses)也可以被深度扩展.

  var Note = Backbone.Model.extend({                        ---->定义一个Note模型，还有一些方法
    initialize: function(){....},
    author: function(){....},
    coordinates: function(){....},
    allowedToEdit: function(account){
      return true;
    }
  });
  
  var PrivateNote = Node.extend({                           ---->使用Note模型extend设置原型链，访问父类
    allowedToEdit: function(account){
      return account.owns(this);
    }
  });
  
  父类 的简述：JavaScript没有提供一种直接调用父类的方式，如果你要重载原型链中上层定义的同名函数，如 set，或者 save， 并且你想调用父对象的实现，这时需要明确的调用它，类似这样：  ------> 暂时是个问号？？？
  var CSSercom = Backbone.Model.extend({
    set: function(attributes, options){
      Backbone.Model.prototype.set.call(this, attributes, options);
    }
  });
  
  
  注释：
    要了解下javascript的原型链原理。
